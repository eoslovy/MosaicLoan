####
#test_template_trigger:
#tags:
# - $GITLAB_USER_EMAIL
#script:
# - echo "CI 정상 작동 여부 확인"
# - echo "🔍 변경된 파일 목록:"
# - git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA

.backend-default-build:
  stage: build
  tags:
    - $GITLAB_USER_EMAIL
  script:
    - echo "🔨 Docker 이미지 빌드 및 테스트 중..."
    - docker build -t ${DOCKERHUB_USERNAME:-default}/$REGISTRY_PATH-${SERVICE_NAME}:$IMAGE_TAG ${BUILD_CONTEXT}
    #- echo "✅ 빌드 완료: $IMAGE_NAME:$IMAGE_TAG

.backend-default-push:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "web"' # 수동 실행도 허용하려면
      when: manual
    - when: never
  tags:
    - $GITLAB_USER_EMAIL
  stage: push
  script:
    - docker images
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
    - docker push ${DOCKERHUB_USERNAME:-default}/$REGISTRY_PATH-${SERVICE_NAME}:$IMAGE_TAG

.backend-default-deploy:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "web"' # 수동 실행도 허용하려면
      when: manual
    - when: never
  tags:
    - $GITLAB_USER_EMAIL
  stage: deploy
  before_script:
    - apk add --no-cache openssh gettext coreutils
  script:
    # 1️⃣ SSH Key 설정
    #- apt-get update && apt-get install -y openssh-client basez
    - mkdir -p ~/.ssh
    - echo "$BASTION_PRIVATE_KEY_B64" | base64 -d > bastion.pem
    - chmod 600 bastion.pem

      # 2️⃣ 배포 서버에 Docker 로그인 정보 전송
    - ssh -T -o StrictHostKeyChecking=no -i bastion.pem $DEPLOY_SERVER "echo \"$DOCKER_HUB_TOKEN\" | docker login -u \"$DOCKER_HUB_USERNAME\" --password-stdin"

      # 3️⃣ 환경변수가 반영된 `docker-compose.processed.yml`을 배포 서버로 전송
    - scp -o StrictHostKeyChecking=no -i bastion.pem docker-compose.processed.yml $DEPLOY_SERVER:/home/ubuntu/docker-compose.yml

      # 4️⃣ 배포 서버에서 `docker-compose` 실행 (로그인 유지됨)
    - ssh -T -o StrictHostKeyChecking=no -i bastion.pem $DEPLOY_SERVER "
          export DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME && \
          export IMAGE_TAG=$IMAGE_TAG && \
          export SERVICE_NAME=$SERVICE_NAME && \
          cd /home/ubuntu && \
          docker-compose pull $SERVICE_NAME && \
          docker-compose up -d $SERVICE_NAME --remove-orphans"
    - ssh -T -o StrictHostKeyChecking=no -i bastion.pem $DEPLOY_SERVER "
          docker ps"


